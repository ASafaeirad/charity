{
  "root": true,
  "extends": ["@fullstacksjs"],
  "rules": {
    "@typescript-eslint/ban-types": "off"
  },
  "parserOptions": {
    "emitDecoratorMetadata": true
  },
  "overrides": [
    {
      "files": ["*.tsx"],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "default",
            "format": ["camelCase"]
          },
          {
            "selector": "function",
            "format": ["camelCase", "PascalCase"]
          },
          {
            "selector": "variable",
            "format": ["camelCase", "UPPER_CASE", "PascalCase"]
          },
          {
            "selector": "parameter",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allowSingleOrDouble"
          },
          {
            "selector": "memberLike",
            "format": null
          },
          {
            "selector": "memberLike",
            "modifiers": ["static"],
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "memberLike",
            "modifiers": ["private"],
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["PascalCase"]
          },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": { "regex": "^I[A-Z]", "match": false }
          }
        ]
      }
    }
  ]
}
